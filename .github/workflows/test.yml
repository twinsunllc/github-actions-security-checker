name: Test Action

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-pass:
    name: Test with Secure Actions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1
      
      - name: Setup Python
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c  # v5.0.0
      
      - name: Run Security Audit
        id: audit
        uses: ./
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Verify Pass
        run: |
          if [ "${{ steps.audit.outputs.exit_code }}" != "0" ]; then
            echo "‚ùå Expected audit to pass but it failed"
            exit 1
          fi
          echo "‚úÖ Audit passed as expected"

  test-fail:
    name: Test with Insecure Actions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1
      
      - name: Copy test workflow with issues
        run: |
          mkdir -p .github/workflows
          cp test-workflows/insecure.yml .github/workflows/
      
      - name: Run Security Audit
        id: audit
        uses: ./
        continue-on-error: true
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Verify Fail
        run: |
          if [ "${{ steps.audit.outputs.exit_code }}" == "0" ]; then
            echo "‚ùå Expected audit to fail but it passed"
            exit 1
          fi
          echo "‚úÖ Audit failed as expected"
      
      - name: Check Report
        run: |
          echo "üìã Audit Report:"
          cat action-security-report.md

  test-custom-dir:
    name: Test Custom Directory
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1
      
      - name: Create custom workflows directory
        run: |
          mkdir -p custom/workflows
          # Copy the actual action.yml file into the custom directory
          cp action.yml custom/workflows/action.yml
      
      - name: Run Security Audit
        id: audit
        uses: ./
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflows_dir: custom/workflows
      
      - name: Verify Custom Directory
        run: |
          if [ "${{ steps.audit.outputs.exit_code }}" != "0" ]; then
            echo "‚ùå Custom directory test failed"
            exit 1
          fi
          echo "‚úÖ Custom directory test passed"

  test-whitelist-comma:
    name: Test Comma-Separated Whitelist
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1
      
      - name: Copy test workflow with mixed actions
        run: |
          mkdir -p .github/workflows
          cp test-workflows/test-mixed.yml .github/workflows/
      
      - name: Run Security Audit with Comma-Separated Whitelist
        id: audit
        uses: ./
        continue-on-error: true
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          whitelist: "actions, docker, hashicorp/setup-terraform"
          blacklist: "suspicious"
      
      - name: Verify Whitelist Logic
        run: |
          echo "üìã Audit Report:"
          cat action-security-report.md
          
          # Check that suspicious/action was blocked
          if ! grep -A10 "suspicious/action" action-security-report.md | grep -q "Blocked by whitelist/blacklist rules"; then
            echo "‚ùå Expected suspicious/action to be blocked by blacklist"
            exit 1
          fi
          
          # Check that allowed actions passed whitelist check
          if ! grep -A10 "actions/checkout" action-security-report.md | grep -q "Allowed by Rules.*‚úÖ"; then
            echo "‚ùå Expected actions/checkout to be allowed by whitelist"
            exit 1
          fi
          
          echo "‚úÖ Whitelist/blacklist logic working correctly"

  test-whitelist-multiline:
    name: Test Multiline String Whitelist
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1
      
      - name: Copy test workflow for multiline test
        run: |
          mkdir -p .github/workflows
          cp test-workflows/test-multiline.yml .github/workflows/
      
      - name: Run Security Audit with Multiline Whitelist
        id: audit
        uses: ./
        continue-on-error: true
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          whitelist: |
            actions
            azure
          blacklist: |
            untrusted
            suspicious
      
      - name: Verify Multiline Format
        run: |
          echo "üìã Audit Report:"
          cat action-security-report.md
          
          # Verify azure/login is allowed but untrusted/action is blocked
          if ! grep -A10 "untrusted/action" action-security-report.md | grep -q "Blocked by whitelist/blacklist rules"; then
            echo "‚ùå Expected untrusted/action to be blocked"
            exit 1
          fi
          
          echo "‚úÖ Multiline format working correctly"

  test-blacklist-precedence:
    name: Test Blacklist Precedence
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1
      
      - name: Copy test workflow for precedence test
        run: |
          mkdir -p .github/workflows
          cp test-workflows/test-precedence.yml .github/workflows/
      
      - name: Run Security Audit with Conflicted Rules
        id: audit
        uses: ./
        continue-on-error: true
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          whitelist: "actions, conflicted"
          blacklist: "conflicted"
      
      - name: Verify Blacklist Precedence
        run: |
          echo "üìã Audit Report:"
          cat action-security-report.md
          
          # Verify that blacklist takes precedence over whitelist
          if ! grep -A10 "conflicted/action" action-security-report.md | grep -q "Blocked by whitelist/blacklist rules"; then
            echo "‚ùå Expected conflicted/action to be blocked (blacklist should take precedence)"
            exit 1
          fi
          
          echo "‚úÖ Blacklist precedence working correctly"

  test-no-whitelist:
    name: Test Blacklist Only (No Whitelist)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1
      
      - name: Copy test workflow for blacklist only test
        run: |
          mkdir -p .github/workflows
          cp test-workflows/test-blacklist-only.yml .github/workflows/
      
      - name: Run Security Audit with Blacklist Only
        id: audit
        uses: ./
        continue-on-error: true
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          blacklist: "blocked"
      
      - name: Verify Blacklist Only Logic
        run: |
          echo "üìã Audit Report:"
          cat action-security-report.md
          
          # Verify blocked/action is blocked
          if ! grep -A10 "blocked/action" action-security-report.md | grep -q "Blocked by whitelist/blacklist rules"; then
            echo "‚ùå Expected blocked/action to be blocked"
            exit 1
          fi
          
          # Verify random/action is allowed (no whitelist means allow all non-blacklisted)
          if ! grep -A10 "random/action" action-security-report.md | grep -q "Allowed by Rules.*‚úÖ"; then
            echo "‚ùå Expected random/action to be allowed when no whitelist is specified"
            exit 1
          fi
          
          echo "‚úÖ Blacklist-only logic working correctly"

  test-allowlist:
    name: Test Allowlist (Bypass Security Checks)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1
      
      - name: Create isolated test directory
        run: |
          mkdir -p test-allowlist-workflows
          cp test-workflows/allowlist-test.yml test-allowlist-workflows/
      
      - name: Run Security Audit with Allowlist
        id: audit
        uses: ./
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflows_dir: test-allowlist-workflows
          allowlist: "actions"
      
      - name: Verify Allowlist Bypass Logic
        run: |
          echo "üìã Audit Report:"
          cat action-security-report.md
          
          # Verify actions/checkout shows "Trusted - bypassing security checks"
          if ! grep -A10 "actions/checkout" action-security-report.md | grep -q "Trusted - bypassing security checks"; then
            echo "‚ùå Expected actions/checkout to show 'Trusted - bypassing security checks'"
            exit 1
          fi
          
          # Verify non-allowlisted actions still get security checks
          if ! grep -A10 "some-vendor/action" action-security-report.md | grep -q "Not from verified publisher"; then
            echo "‚ùå Expected some-vendor/action to fail security checks"
            exit 1
          fi
          
          echo "‚úÖ Allowlist bypass logic working correctly"